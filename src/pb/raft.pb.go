// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: raft.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        int32                  `protobuf:"varint,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	Term          int32                  `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	LogLength     int32                  `protobuf:"varint,3,opt,name=logLength,proto3" json:"logLength,omitempty"`
	LogTerm       int32                  `protobuf:"varint,4,opt,name=logTerm,proto3" json:"logTerm,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoteRequest) Reset() {
	*x = VoteRequest{}
	mi := &file_raft_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteRequest) ProtoMessage() {}

func (x *VoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_raft_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteRequest.ProtoReflect.Descriptor instead.
func (*VoteRequest) Descriptor() ([]byte, []int) {
	return file_raft_proto_rawDescGZIP(), []int{0}
}

func (x *VoteRequest) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *VoteRequest) GetTerm() int32 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *VoteRequest) GetLogLength() int32 {
	if x != nil {
		return x.LogLength
	}
	return 0
}

func (x *VoteRequest) GetLogTerm() int32 {
	if x != nil {
		return x.LogTerm
	}
	return 0
}

type VoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeID        int32                  `protobuf:"varint,1,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	Term          int32                  `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	VoteGranted   bool                   `protobuf:"varint,3,opt,name=voteGranted,proto3" json:"voteGranted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoteResponse) Reset() {
	*x = VoteResponse{}
	mi := &file_raft_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteResponse) ProtoMessage() {}

func (x *VoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_raft_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteResponse.ProtoReflect.Descriptor instead.
func (*VoteResponse) Descriptor() ([]byte, []int) {
	return file_raft_proto_rawDescGZIP(), []int{1}
}

func (x *VoteResponse) GetNodeID() int32 {
	if x != nil {
		return x.NodeID
	}
	return 0
}

func (x *VoteResponse) GetTerm() int32 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *VoteResponse) GetVoteGranted() bool {
	if x != nil {
		return x.VoteGranted
	}
	return false
}

type LogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LeaderID      int32                  `protobuf:"varint,1,opt,name=leaderID,proto3" json:"leaderID,omitempty"`
	Term          int32                  `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	LogLength     int32                  `protobuf:"varint,3,opt,name=logLength,proto3" json:"logLength,omitempty"`
	LogTerm       int32                  `protobuf:"varint,4,opt,name=logTerm,proto3" json:"logTerm,omitempty"`
	LeaderCommit  int32                  `protobuf:"varint,5,opt,name=leaderCommit,proto3" json:"leaderCommit,omitempty"`
	Entries       []*LogEntry            `protobuf:"bytes,6,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogRequest) Reset() {
	*x = LogRequest{}
	mi := &file_raft_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogRequest) ProtoMessage() {}

func (x *LogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_raft_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogRequest.ProtoReflect.Descriptor instead.
func (*LogRequest) Descriptor() ([]byte, []int) {
	return file_raft_proto_rawDescGZIP(), []int{2}
}

func (x *LogRequest) GetLeaderID() int32 {
	if x != nil {
		return x.LeaderID
	}
	return 0
}

func (x *LogRequest) GetTerm() int32 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *LogRequest) GetLogLength() int32 {
	if x != nil {
		return x.LogLength
	}
	return 0
}

func (x *LogRequest) GetLogTerm() int32 {
	if x != nil {
		return x.LogTerm
	}
	return 0
}

func (x *LogRequest) GetLeaderCommit() int32 {
	if x != nil {
		return x.LeaderCommit
	}
	return 0
}

func (x *LogRequest) GetEntries() []*LogEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type LogResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FollowerID    int32                  `protobuf:"varint,1,opt,name=followerID,proto3" json:"followerID,omitempty"`
	Term          int32                  `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	Ack           int32                  `protobuf:"varint,3,opt,name=ack,proto3" json:"ack,omitempty"`
	Success       bool                   `protobuf:"varint,4,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogResponse) Reset() {
	*x = LogResponse{}
	mi := &file_raft_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogResponse) ProtoMessage() {}

func (x *LogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_raft_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogResponse.ProtoReflect.Descriptor instead.
func (*LogResponse) Descriptor() ([]byte, []int) {
	return file_raft_proto_rawDescGZIP(), []int{3}
}

func (x *LogResponse) GetFollowerID() int32 {
	if x != nil {
		return x.FollowerID
	}
	return 0
}

func (x *LogResponse) GetTerm() int32 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *LogResponse) GetAck() int32 {
	if x != nil {
		return x.Ack
	}
	return 0
}

func (x *LogResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type LogEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          int32                  `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Command       string                 `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	mi := &file_raft_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_raft_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_raft_proto_rawDescGZIP(), []int{4}
}

func (x *LogEntry) GetTerm() int32 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *LogEntry) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

var File_raft_proto protoreflect.FileDescriptor

const file_raft_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"raft.proto\x12\x04raft\"q\n" +
	"\vVoteRequest\x12\x16\n" +
	"\x06nodeId\x18\x01 \x01(\x05R\x06nodeId\x12\x12\n" +
	"\x04term\x18\x02 \x01(\x05R\x04term\x12\x1c\n" +
	"\tlogLength\x18\x03 \x01(\x05R\tlogLength\x12\x18\n" +
	"\alogTerm\x18\x04 \x01(\x05R\alogTerm\"\\\n" +
	"\fVoteResponse\x12\x16\n" +
	"\x06nodeID\x18\x01 \x01(\x05R\x06nodeID\x12\x12\n" +
	"\x04term\x18\x02 \x01(\x05R\x04term\x12 \n" +
	"\vvoteGranted\x18\x03 \x01(\bR\vvoteGranted\"\xc2\x01\n" +
	"\n" +
	"LogRequest\x12\x1a\n" +
	"\bleaderID\x18\x01 \x01(\x05R\bleaderID\x12\x12\n" +
	"\x04term\x18\x02 \x01(\x05R\x04term\x12\x1c\n" +
	"\tlogLength\x18\x03 \x01(\x05R\tlogLength\x12\x18\n" +
	"\alogTerm\x18\x04 \x01(\x05R\alogTerm\x12\"\n" +
	"\fleaderCommit\x18\x05 \x01(\x05R\fleaderCommit\x12(\n" +
	"\aentries\x18\x06 \x03(\v2\x0e.raft.LogEntryR\aentries\"m\n" +
	"\vLogResponse\x12\x1e\n" +
	"\n" +
	"followerID\x18\x01 \x01(\x05R\n" +
	"followerID\x12\x12\n" +
	"\x04term\x18\x02 \x01(\x05R\x04term\x12\x10\n" +
	"\x03ack\x18\x03 \x01(\x05R\x03ack\x12\x18\n" +
	"\asuccess\x18\x04 \x01(\bR\asuccess\"8\n" +
	"\bLogEntry\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x05R\x04term\x12\x18\n" +
	"\acommand\x18\x02 \x01(\tR\acommand2r\n" +
	"\x04Raft\x124\n" +
	"\vRequestVote\x12\x11.raft.VoteRequest\x1a\x12.raft.VoteResponse\x124\n" +
	"\rAppendEntries\x12\x10.raft.LogRequest\x1a\x11.raft.LogResponseB?Z=github.com/harshitster/Distributed-Database-for-SQL/src/pb;pbb\x06proto3"

var (
	file_raft_proto_rawDescOnce sync.Once
	file_raft_proto_rawDescData []byte
)

func file_raft_proto_rawDescGZIP() []byte {
	file_raft_proto_rawDescOnce.Do(func() {
		file_raft_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_raft_proto_rawDesc), len(file_raft_proto_rawDesc)))
	})
	return file_raft_proto_rawDescData
}

var file_raft_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_raft_proto_goTypes = []any{
	(*VoteRequest)(nil),  // 0: raft.VoteRequest
	(*VoteResponse)(nil), // 1: raft.VoteResponse
	(*LogRequest)(nil),   // 2: raft.LogRequest
	(*LogResponse)(nil),  // 3: raft.LogResponse
	(*LogEntry)(nil),     // 4: raft.LogEntry
}
var file_raft_proto_depIdxs = []int32{
	4, // 0: raft.LogRequest.entries:type_name -> raft.LogEntry
	0, // 1: raft.Raft.RequestVote:input_type -> raft.VoteRequest
	2, // 2: raft.Raft.AppendEntries:input_type -> raft.LogRequest
	1, // 3: raft.Raft.RequestVote:output_type -> raft.VoteResponse
	3, // 4: raft.Raft.AppendEntries:output_type -> raft.LogResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_raft_proto_init() }
func file_raft_proto_init() {
	if File_raft_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_raft_proto_rawDesc), len(file_raft_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_raft_proto_goTypes,
		DependencyIndexes: file_raft_proto_depIdxs,
		MessageInfos:      file_raft_proto_msgTypes,
	}.Build()
	File_raft_proto = out.File
	file_raft_proto_goTypes = nil
	file_raft_proto_depIdxs = nil
}
